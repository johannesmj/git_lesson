sann <- test$default
pred_test <- predict(model1, newdata = test, type = "response")
klassifisering <- ifelse(pred_test > 0.5, "Yes", "No")
sann
klassifisering
#Lage kontigenstabeller, for Ã¥ sjekk hvor mange riktige modellen tippet:
table(sann, klassifisering)
#Senker kritisk verdi:
klassifisering2 <- ifelse(pred_test > 0.3, "Yes", "No")
klassifisering2
table(sann, klassifisering2)
factor(5)
?factor()
#Read in library
library(ggplot2)
library(dplyr)
#Making the Supply function
y_supply <-
function(pi, pi_lag, nu, o){
y <- (pi-pi_lag-o)/nu
return(y)
}
#Making the Interes Rate function
nominal_interest_rate <-
function(pi, m, pibar, rbar){
R <- m * (pi - pibar) + rbar
return(R)
}
#Making the Demand function
y_demand <-
function(pi, a, b, rbar, m, pibar){
R <- m * (pi - pibar) + rbar
y <- a - (b*(R - rbar))
return(y)
}
install.packages("assertthat")
library(assertthat)
#Test code to question 1
assert_that(
nominal_interest_rate(pi=.0, m=1, pibar=.02, rbar=.02) <
nominal_interest_rate(pi=.02, m=1, pibar=.02, rbar=.02),
msg = "Interest rate isn't falling with lowered inflation"
)
assert_that(
y_demand(pi=.02,a=0,b=.5,rbar=0.02,m=1,pibar=.02) <
y_demand(pi=.0,a=0,b=.5,rbar=0.02,m=1,pibar=.02),
msg = "Demand curve isn't decreasing with higher prices"
)
assert_that(
y_supply(pi=.00,pi_lag=.02, nu=.8, o=0) <
y_supply(pi=.02,pi_lag=.02, nu=.8, o=0),
msg = "Supply isn't increasing with higher inflation"
)
assert_that(
nominal_interest_rate(pi=.1, m=2, pibar=.02, rbar=.02)==.18,
msg="Interest rate function returns wrong values"
)
assert_that(
abs(y_demand(pi=1,a=10,b=10,rbar=0.02,m=1,pibar=.02)-.2)<.0001,
msg="Demand function returns wrong values"
)
assert_that(
abs(y_supply(pi=-.01,pi_lag=.05, nu=.3, o=.1)+0.5333)<0.001,
msg="Supply function returns wrong values"
)
ggplot() +
geom_line(y_demand(0,0,0.5,0.02,1,0.02), aes(x = y))
ggplot(y_demand(0,0,0.5,0.02,1,0.02), aes(x = y)) +
geom_line( )
y_demand(0,0,0.5,0.02,1,0.02)
library(tidyverse)
library(magrittr)
library(tweedie)
library(ggplot2)
simTweedieTest <-
function(N){
t.test(
rtweedie(N,
mu    = 10000,
phi   = 100,
power = 1.9),
mu=10000)$p.value
}
MTweedieTests <-
function(N, M, sig) {
sum(replicate(M, simTweedieTest(N)) < sig) / M
}
MTweedieTests(N = 100, M = 1000, sig = .05)
df <-
tibble(N = c(10, 100, 1000, 5000),
M = 100,
share_reject = NA)
df
df <-
tibble(N = c(10, 100, 1000, 5000),
M = 100,
share_reject = NA)
library(tidyverse)
library(magrittr)
library(tweedie)
library(dplyr)
simTweedieTest <-
function(N){
t.test(
rtweedie(N,
mu    = 10000,
phi   = 100,
power = 1.9),
mu=10000)$p.value
}
MTweedieTests <-
function(N, M, sig) {
sum(replicate(M, simTweedieTest(N)) < sig) / M
}
MTweedieTests(N = 100, M = 1000, sig = .05)
df <-
tibble(N = c(10, 100, 1000, 5000),
M = 100,
share_reject = NA)
df
for (i in 1:nrow(df)) {
df$share_reject[i] <-
MTweedieTests(N   = df$N[i],
M   = df$M[i],
sig = .05)
}
for (i in 1:nrow(df)) {
df$share_reject[i] <-
MTweedieTests(N   = df$N[i],
M   = df$M[i],
sig = .05)
}
df
#Read in library
library(tweedie)
library(dplyr)
library(ggplot2)
#Creating the distribution
hist(
rtweedie(n=1000, mu=10000, phi=100, power=1.9)
)
testdata <- rtweedie(n=1000, mu=10000, phi=100, power=1.9)
#Trying t-test with null hypothesis u(0) = 10000.
t.test(testdata, mu=10000)
t.test(testdata, mu=10000)$p.value
#Question 4.6.1
simTweedieTest <- function(N){
d_data <- rtweedie(n=N, mu=10000, phi=100, power=1.9)
t_test <- t.test(d_data, mu=10000)$p.value
return(t_test)
}
simTweedieTest(100)
simTweedieTest(1000)
simTweedieTest(10000)
#Question 4.6.2
MTweedieTests <-
function(M, N, alpha){
v <- replicate(M,simTweedieTest(N))
v2 <- sum(v < alpha)
v3 <- v2/M
return(v3)
}
#Question 4.6.3.1
df <- tibble(N = c(10, 100, 1000, 5000), M = 100, share_reject = NA)
df
#Question 4.6.3.2
df2 <-
df %>%
for (i in 1:nrow(df)){
df$share_reject[i] <- MTweedieTests(N = df$N[i],
M = df$M[i],
alpha = 0.05)
}
for (i in 1:nrow(df)){
df$share_reject[i] <- MTweedieTests(N = df$N[i],
M = df$M[i],
alpha = 0.05)
}
df
#Question 4.6.3.1
df <- tibble(N = c(10, 100, 1000, 5000), M = 100, share_reject = NA)
y_demand(0,0,0.5,0.02,1,0.02)
df
knitr::opts_chunk$set(echo = TRUE, cache = F)
#Read in library
library(ggplot2)
library(dplyr)
library(assertthat)
library(magrittr)
library(ggthemes)
#Making the Demand function
y_demand <-
function(pi, a, b, rbar, m, pibar){
R <- m * (pi - pibar) + rbar
y <- a - (b*(R - rbar))
return(y)
}
#Making the Supply function
y_supply <-
function(pi, pi_lag, nu, o){
y <- (pi-pi_lag-o)/nu
return(y)
}
#Making the Interes Rate function
nominal_interest_rate <-
function(pi, m, pibar, rbar){
R <- m * (pi - pibar) + rbar
return(R)
}
library(assertthat)
# Tests for assignment 1. Leave this code chunk *unchanged* and
# ensure you run the tests *after* the chunk with you answer to
# assignment 1.
assert_that(
nominal_interest_rate(pi=.0, m=1, pibar=.02, rbar=.02) <
nominal_interest_rate(pi=.02, m=1, pibar=.02, rbar=.02),
msg = "Interest rate isn't falling with lowered inflation"
)
assert_that(
y_demand(pi=.02,a=0,b=.5,rbar=0.02,m=1,pibar=.02) <
y_demand(pi=.0,a=0,b=.5,rbar=0.02,m=1,pibar=.02),
msg = "Demand curve isn't decreasing with higher prices"
)
assert_that(
y_supply(pi=.00,pi_lag=.02, nu=.8, o=0) <
y_supply(pi=.02,pi_lag=.02, nu=.8, o=0),
msg = "Supply isn't increasing with higher inflation"
)
assert_that(
nominal_interest_rate(pi=.1, m=2, pibar=.02, rbar=.02)==.18,
msg="Interest rate function returns wrong values"
)
assert_that(
abs(y_demand(pi=1,a=10,b=10,rbar=0.02,m=1,pibar=.02)-.2)<.0001,
msg="Demand function returns wrong values"
)
assert_that(
abs(y_supply(pi=-.01,pi_lag=.05, nu=.3, o=.1)+0.5333)<0.001,
msg="Supply function returns wrong values"
)
## Insert your code for solving problem 2 here
## Insert your code for solving problem 3 here
## Insert your code for solving problem 4 here
sessionInfo()
#Read in library
library(ggplot2)
library(dplyr)
library(assertthat)
library(magrittr)
library(ggthemes)
#Making the Demand function
y_demand <-
function(pi, a, b, rbar, m, pibar){
R <- m * (pi - pibar) + rbar
y <- a - (b*(R - rbar))
return(y)
}
#Making the Supply function
y_supply <-
function(pi, pi_lag, nu, o){
y <- (pi-pi_lag-o)/nu
return(y)
}
#Making the Interes Rate function
nominal_interest_rate <-
function(pi, m, pibar, rbar){
R <- m * (pi - pibar) + rbar
return(R)
}
#Read in library
library(ggplot2)
library(dplyr)
library(assertthat)
library(magrittr)
library(ggthemes)
#Read in library
library(ggplot2)
library(dplyr)
library(assertthat)
library(magrittr)
library(ggthemes)
# Tests for assignment 1. Leave this code chunk *unchanged* and
# ensure you run the tests *after* the chunk with you answer to
# assignment 1.
assert_that(
nominal_interest_rate(pi=.0, m=1, pibar=.02, rbar=.02) <
nominal_interest_rate(pi=.02, m=1, pibar=.02, rbar=.02),
msg = "Interest rate isn't falling with lowered inflation"
)
assert_that(
y_demand(pi=.02,a=0,b=.5,rbar=0.02,m=1,pibar=.02) <
y_demand(pi=.0,a=0,b=.5,rbar=0.02,m=1,pibar=.02),
msg = "Demand curve isn't decreasing with higher prices"
)
assert_that(
y_supply(pi=.00,pi_lag=.02, nu=.8, o=0) <
y_supply(pi=.02,pi_lag=.02, nu=.8, o=0),
msg = "Supply isn't increasing with higher inflation"
)
assert_that(
nominal_interest_rate(pi=.1, m=2, pibar=.02, rbar=.02)==.18,
msg="Interest rate function returns wrong values"
)
assert_that(
abs(y_demand(pi=1,a=10,b=10,rbar=0.02,m=1,pibar=.02)-.2)<.0001,
msg="Demand function returns wrong values"
)
assert_that(
abs(y_supply(pi=-.01,pi_lag=.05, nu=.3, o=.1)+0.5333)<0.001,
msg="Supply function returns wrong values"
)
#Create an empty data frame to store different inflation values (pi)
#and to fill in output gap values from the demand and supply function
df1 <- tibble(pi = c(0.001,0.003,0.005,0.007,0.009,0.01,0.015,
0.02,0.03,0.05), y_s = NA, y_d = NA)
#Uses for loop to fill in output gap values in the df1 data frame
for (i in 1:nrow(df1)){
df1$y_d[i] <- y_demand(pi = df1$pi[i],
a = 0,
b = 0.5,
rbar = 0.02,
m = 1,
pibar = 0.02)
df1$y_s[i] <- y_supply(pi = df1$pi[i],
pi_lag = 0.02,
nu = 0.8,
o = 0)
}
#Plot the AS and AD lines.
t_1 <- "AS"
t_2 <- "AD"
ggplot(df1, aes(y = pi)) +
geom_line(aes(x = y_d ), color = "blue" ) +
geom_line(aes(x = y_s), color = "red") +
xlab("Output gap (y)") +
ylab("Inflation") +
ggtitle("AS-AD") +
annotate("text", x= 0.005, y = 0.048, label = t_1, color = "red") +
annotate("text", x= 0.005, y = 0.045, label = t_2, color = "blue") +
theme_economist()
#2.2 - A diagram with a positive demand shock (at = .1)
#First I'm going to make a new data to fill in the new
#output gap from the demand function.
df2 <- tibble(pi = c(0.001,0.003,0.005,0.007,0.009,0.01,0.015,
0.02,0.03,0.05,0.1,0.12), y_s = NA, y_d = NA)
#Using a for loop to fill in the new data frame with the
#demand and supply functions with a postive demand shock.
for (i in 1:nrow(df2)){
df2$y_d[i] <- y_demand(pi = df2$pi[i],
a = 0.1,
b = 0.5,
rbar = 0.02,
m = 2,
pibar = 0.02)
df2$y_s[i] <- y_supply(pi = df2$pi[i],
pi_lag = 0.02,
nu = 0.8,
o = 0)
}
#Plot the AS-AD lines
t_3 <- "AD (0)"
t_4 <- "AD (1)"
ggplot(df2, aes(y = pi)) +
geom_line(aes(x = y_d ), color = "blue" ) +
geom_line(aes(x = y_s), color = "red") +
geom_line(data = df1, aes(x = y_d, y = pi)) +
xlab("Output gap (y)") +
ylab("Inflation") +
ggtitle("AS-AD") +
annotate("text", x = 0, y = 0.11, label = t_1, color = "red") +
annotate("text", x = 0, y = 0.10, label = t_4, color = "blue") +
annotate("text", x = 0, y = 0.09, label = t_3, color = "black" ) +
theme_classic()
#2.3 A diagram with a positive supply shock (ot = .1)
#First I'm going to make a new data frame to fill in the
#new values from a supply shock of ot = 0.1
df3 <- tibble(pi = c(0.001,0.003,0.005,0.007,0.009,0.01,0.015,
0.02,0.03,0.05,0.09,0.11), y_s = NA, y_d = NA)
for (i in 1:nrow(df3)){
df3$y_d[i] <- y_demand(pi = df3$pi[i],
a = 0,
b = 0.5,
rbar = 0.02,
m = 1,
pibar = 0.02)
df3$y_s[i] <- y_supply(pi = df3$pi[i],
pi_lag = 0.02,
nu = 0.8,
o = 0.1)
}
#Plot the AD-AS lines.
t_5 <- "AS (0)"
t_6 <- "AS (1)"
ggplot(df3, aes(y = pi)) +
geom_line(aes(x = y_d ), color = "blue" ) +
geom_line(aes(x = y_s), color = "red") +
geom_line(data = df1, aes(x = y_s, y = pi)) +
xlab("Output gap (y)") +
ylab("Inflation") +
theme_classic() +
ggtitle("AS-AD") +
annotate("text", x = -0.12, y = 0.10, label = t_5, color = "black") +
annotate("text", x = -0.12, y = 0.09, label = t_6, color = "red") +
annotate("text", x = -0.12, y = 0.08, label = t_2, color = "blue")
#2.4 monetary policy responsiveness to shocks
#2.4.1 Monetary responds to positive demand shock.
#First im going to make a new data frame with at  = .1
df4 <- tibble(pi = c(0.001,0.003,0.005,0.007,0.009,0.01,0.015,
0.02,0.03,0.05), y_s = NA, y_d = NA)
#Fill in the new data frame with respond from the central
#bank. I have represented this with a higher r.
for (i in 1:nrow(df4)){
df4$y_d[i] <- y_demand(pi = df4$pi[i],
a = 0,
b = 0.5,
rbar = 0.20,
m = 1,
pibar = 0.02)
df4$y_s[i] <- y_supply(pi = df4$pi[i],
pi_lag = 0.02,
nu = 0.8,
o = 0)
}
#Plot the AD-AS lines
t_9 <- "AD(0)"
t_10 <- "AD(1)"
ggplot(df4, aes(y = pi)) +
geom_line(aes(x = y_d ), color = "blue" ) +
geom_line(aes(x = y_s), color = "red") +
geom_line(data = df2, aes(x = y_d, y = pi)) +
xlab("Output gap (y)") +
ylab("Inflation") +
theme_classic() +
ggtitle("AS-AD") +
annotate("text", x = 0, y = 0.11, label = t_1, color = "red") +
annotate("text", x = 0, y = 0.10, label = t_9, color = "black")+
annotate("text", x = 0, y = 0.09, label = t_10, color = "blue")
#2.4 monetary policy responsiveness to shocks
#2.4.1 Monetary responds to positive demand shock.
#First im going to make a new data frame with at  = .1
df4 <- tibble(pi = c(0.001,0.003,0.005,0.007,0.009,0.01,0.015,
0.02,0.03,0.05), y_s = NA, y_d = NA)
#Fill in the new data frame with respond from the central
#bank. I have represented this with a higher r.
for (i in 1:nrow(df4)){
df4$y_d[i] <- y_demand(pi = df4$pi[i],
a = 0,
b = 0.5,
rbar = 0.20,
m = 1,
pibar = 0.02)
df4$y_s[i] <- y_supply(pi = df4$pi[i],
pi_lag = 0.02,
nu = 0.8,
o = 0)
}
#Plot the AD-AS lines
t_9 <- "AD(0)"
t_10 <- "AD(1)"
ggplot(df4, aes(y = pi)) +
geom_line(aes(x = y_d ), color = "blue" ) +
geom_line(aes(x = y_s), color = "red") +
geom_line(data = df2, aes(x = y_d, y = pi)) +
xlab("Output gap (y)") +
ylab("Inflation") +
theme_classic() +
ggtitle("AS-AD") +
annotate("text", x = 0, y = 0.11, label = t_1, color = "red") +
annotate("text", x = 0, y = 0.10, label = t_9, color = "black")+
annotate("text", x = 0, y = 0.09, label = t_10, color = "blue")
#2.4.1 monetary policy response to a positive supply shock.
#First I'm going to make a new data frame with o  = .1
df5 <- tibble(pi = c(0.001,0.003,0.005,0.007,0.009,0.01,
0.05, 0.1, 0.2), y_s = NA, y_d = NA)
#Using a loop to fill in the values.
for (i in 1:nrow(df5)){
df5$y_d[i] <- y_demand(pi = df5$pi[i],
a = 0,
b = 0.5,
rbar = 0.02,
m = 2,
pibar = 0.02)
df5$y_s[i] <- y_supply(pi = df5$pi[i],
pi_lag = 0.02,
nu = 0.8,
o = 0)
}
#Plot.
t_7 <- "AS (0)"
t_8 <- "AS (1)"
ggplot(df5, aes(y = pi)) +
geom_line(aes(x = y_d ), color = "blue" ) +
geom_line(aes(x = y_s), color = "red") +
geom_line(data = df3, aes(x = y_s, y = pi)) +
xlab("Output gap (y)") +
ylab("Inflation") +
theme_classic() +
ggtitle("AS-AD") +
annotate("text", x = -0.05, y = 0.20, label = t_8, color = "red") +
annotate("text", x = -0.05, y = 0.18, label = t_7, color = "black") +
annotate("text", x= -0.05, y = 0.16, label = t_2, color = "blue")
setwd("C:/Users/johan/Documents/BAN400/git_lesson/.git")
getwd
getwd()
x <- rnorm(2)
x
x <- rnorm(100)
x
setwd("C:/Users/johan/Documents/BAN400/git_lesson")
y <- rnorm(100)
z <- rnomr(100)
z <- rnorm(100)
